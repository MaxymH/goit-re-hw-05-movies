{"version":3,"file":"static/js/Movies.7b4d813e.chunk.js","mappings":"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","sources":["components/service/Api.js","webpack://react-homework-template/./src/components/service/Component/MoviesItem/moviesItem.module.css?fb20","components/service/Component/MoviesItem/MoviesItem.jsx","webpack://react-homework-template/./src/components/service/Component/MoviesList/moviesList.module.css?6d9d","components/service/Component/MoviesList/MoviewsList.jsx","components/SearchFilm/Search/Search.jsx","webpack://react-homework-template/./src/components/SearchFilm/search.module.css?98d3","components/SearchFilm/SearchFilm.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '48e59f58a9185405f58e5b1089c8261f',\n  },\n});\n\nexport const popularMovies = async () => {\n  const { data } = await instance.get('/trending/movie/week');\n  return data;\n};\n\nexport const getMovieInfo = async id => {\n  const { data } = await instance.get(`/movie/${id}`, {\n    params: {\n      language: 'en - US',\n    },\n  });\n  return data;\n};\n\nexport const searchFilmByName = async (query, page = 1) => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      page,\n      language: 'en - US',\n      include_adult: false,\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"moviesItem_item__pARg+\",\"image\":\"moviesItem_image__FO7fy\",\"title\":\"moviesItem_title__kRCPi\"};","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport s from './moviesItem.module.css';\n\nfunction MoviesItem({ original_name, original_title, id, poster_path, from }) {\n  const image = poster_path\n    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n    : 'https://upload.wikimedia.org/wikipedia/commons/9/9c/Volodymyr_Zelensky_Official_portrait.jpg';\n  const title = original_name || original_title;\n  return (\n    <li className={s.item} key={id}>\n      <Link state={{ from }} to={`/movies/${id}`}>\n        <img src={image} alt={title} className={s.image} />\n        <p className={s.title}>{title}</p>\n      </Link>\n    </li>\n  );\n}\n\nMoviesItem.propTypes = {\n  original_name: PropTypes.string,\n  original_title: PropTypes.string,\n  id: PropTypes.number.isRequired,\n  poster_path: PropTypes.string.isRequired,\n};\n\nexport default MoviesItem;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"moviesList_list__AXKgV\"};","import {useLocation} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n\nimport MoviesItem from '../MoviesItem';\n\nimport s from './moviesList.module.css';\n\nfunction MoviesList({ items }) {\n  const location = useLocation();\n\n  const elements = items.map(item => <MoviesItem key={item.id} {...item} from={ location}/>);\n\n  return <ul className={s.list}>{elements}</ul>;\n}\nMoviesList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      original_name: PropTypes.string,\n      original_title: PropTypes.string,\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MoviesList;","import { searchFilmByName } from \"../../service/Api\";\nimport { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport MoviesList from \"components/service/Component/MoviesList/MoviewsList\";\nconst Search = ({query}) => {\n    const [movies, setMovies] = useState({\n        items: [],\n    isLoading: false,\n    error: null,\n    })\n\n\n    const fetchPopularMovies = async () => {\n        const  {results}  = await searchFilmByName(query);\n        setMovies(prevMovies => ({\n            ...prevMovies,\n            isLoading: true,\n        }))\n        try {\n            setMovies(prevMovies => ({\n                ...prevMovies,\n                items: results,\n                isLoading: false,\n            }))\n        } catch (error) {\n        setMovies(prevMovies => ({\n            ...prevMovies,\n            error: error.message,\n            isLoading: false,\n        }));\n        }\n        \n        };\n        fetchPopularMovies()\n\n\n    const { items , error , isLoading} = movies\n        \n\n        return (\n            <>\n            {error && <p>{error}</p>}\n            {isLoading&& <p>isLoading...</p>}\n            {query.length > 0?<MoviesList items={items}/> : <h2>We not have found this</h2> }\n                \n            </>\n        )\n    }\n    Search.propTypes = {\n        query: PropTypes.string.isRequired,\n    };\n\nexport default Search","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"search_container__EDD1m\",\"input\":\"search_input__7-XxL\",\"button\":\"search_button__wGoPZ\"};","import {  useState } from \"react\"\nimport {useNavigate,useLocation } from \"react-router-dom\"\nimport Search from \"./Search\"\nimport s from './search.module.css'\n\nconst SearchFilm = () => {\n    const [query, setQuery] = useState('')\n\n\n    let navigate = useNavigate();\n    const location = useLocation()\n\n\n    const onSubmit = (e) => { \n        e.preventDefault()\n        setQuery('')\n        if (query === '') {\n        return\n        }\n        navigate({...location,\n        search: `query=${query}`})\n    }\n\n    \n    const onChange = e => {\n        setQuery(e.target.value)\n    }\n\n\n    const  getQuery = new URLSearchParams(location.search).get('query')\n\n    \n    return (\n        <div className={s.container}>\n            <form\n            onSubmit={onSubmit}>\n                <input \n                className={s.input}\n                value={query}\n                onChange={onChange}/>\n                <button \n                className={s.button}\n                type=\"submit\">search</button>\n            </form>\n            {getQuery?<Search query={new URLSearchParams(location.search).get('query')}/> : <h2>Enter name</h2>}\n            </div>\n    )\n}\nexport default SearchFilm","import SearchFilm from \"components/SearchFilm\"\nconst Movies = ( ) => {\n\n    return (\n        <>\n        <SearchFilm/>\n        </>\n    )\n}\n\nexport default  Movies"],"names":["instance","axios","baseURL","params","api_key","popularMovies","get","data","getMovieInfo","id","language","searchFilmByName","query","page","include_adult","getMovieCredits","getMovieReviews","original_name","original_title","poster_path","from","image","title","className","s","state","to","src","alt","items","location","useLocation","elements","map","item","useState","isLoading","error","movies","setMovies","fetchPopularMovies","results","prevMovies","message","length","setQuery","navigate","useNavigate","getQuery","URLSearchParams","search","onSubmit","e","preventDefault","value","onChange","target","type"],"sourceRoot":""}