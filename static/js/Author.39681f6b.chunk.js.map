{"version":3,"file":"static/js/Author.39681f6b.chunk.js","mappings":"sQACA,GAAgB,KAAO,mBAAmB,KAAO,mBAAmB,KAAO,oB,SCmE3E,EA9De,WACX,OAAwBA,EAAAA,EAAAA,UAAS,CAC7BC,MAAO,GACPC,WAAW,EACXC,MAAO,OAHX,eAAOC,EAAP,KAAaC,EAAb,KAKOC,GAAUC,EAAAA,EAAAA,MAAVD,QAEPE,EAAAA,EAAAA,YAAU,WACV,IAAMJ,EAAI,mCAAG,6FACTC,GAAQ,SAAAI,GAAU,yBACXA,GADW,IAEdP,WAAW,GAFG,IADT,UAKaQ,EAAAA,EAAAA,IAAgBJ,GAL7B,gBAKFF,EALE,EAKFA,KAEP,IACIC,GAAQ,SAAAI,GAAU,yBACXA,GADW,IAEdR,MAAOG,EACPF,WAAW,GAHG,GAYrB,CAPC,MAAOC,GAELE,GAAQ,SAAAI,GAAU,yBACXA,GADW,IAEdN,MAAOA,EAAMQ,QACbT,WAAW,GAHG,GAKrB,CApBQ,2CAAH,qDAwBVE,GACC,GAAE,CAACE,IAGJ,IAAOL,EAA4BG,EAA5BH,MAAOC,EAAqBE,EAArBF,UAAYC,EAASC,EAATD,MACpBS,EAAUX,EAAMY,KAAI,SAAAC,GACtB,IAAMC,EAAQD,EAAOE,aAAP,yCACwBF,EAAOE,cACzC,+FACJ,OACA,gBAAIC,UAAWC,EAAAA,KAAf,WACQ,eAAID,UAAWC,EAAAA,KAAf,SAAwBJ,EAAOK,QAC/B,gBAAKF,UAAWC,EAAAA,IAAOE,IAAKL,EAAOM,IAAKP,EAAOK,KAAMG,MAAM,UAFvCR,EAAOS,GAIrC,IAEF,OACI,gCACKpB,IAAS,uBAAIA,IACbD,IAAY,yCACb,eAAIe,UAAWC,EAAAA,KAAf,SACKN,MAMhB,C,kMChEKY,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAa,mCAAG,sGACJL,EAASM,IAAI,wBADT,uBACnBC,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,qDAKbC,EAAY,mCAAG,WAAMT,GAAN,yFACHC,EAASM,IAAT,iBAAuBP,GAAM,CAClDI,OAAQ,CACNM,SAAU,aAHY,uBAClBF,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZG,EAAgB,mCAAG,WAAOC,GAAP,8FAAcC,EAAd,+BAAqB,EAArB,SACPZ,EAASM,IAAT,gBAA8B,CACnDH,OAAQ,CACNS,KAAAA,EACAH,SAAU,UACVI,eAAe,EACfF,MAAAA,KAN0B,uBACtBJ,EADsB,EACtBA,KADsB,kBASvBA,GATuB,2CAAH,sDAYhBrB,EAAe,mCAAG,WAAMa,GAAN,yFACNC,EAASM,IAAT,iBAAuBP,EAAvB,aADM,uBACrBQ,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfO,EAAe,mCAAG,WAAMf,GAAN,yFACNC,EAASM,IAAT,iBAAuBP,EAAvB,aADM,uBACrBQ,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Cast/cast.module.css?8374","components/Cast/Cast.jsx","components/service/Api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"cast_list__bULim\",\"item\":\"cast_item__AMMjV\",\"name\":\"cast_name__qMwEr\"};","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieCredits } from \"../service/Api\";\nimport s from './cast.module.css';\n\n\nconst Author = () => {\n    const [cast, setCast] = useState({\n        items: [],\n        isLoading: false,\n        error: null,\n    })\n    const {filmID} = useParams();\n\n    useEffect(() => {\n    const cast = async () => {\n        setCast(prevMovies => ({\n            ...prevMovies,\n            isLoading: true\n        }))\n        const {cast}  = await getMovieCredits(filmID);\n\n        try {\n            setCast(prevMovies => ({\n                ...prevMovies,\n                items: cast,\n                isLoading: false\n            }))\n        } catch (error) {\n\n            setCast(prevMovies => ({\n                ...prevMovies,\n                error: error.message,\n                isLoading: false,\n            }));\n        }\n        \n        };\n       \n    cast();\n    }, [filmID]);\n    \n\n    const {items, isLoading , error} = cast\n    const element = items.map(author => {\n        const photo = author.profile_path ?\n            `https://image.tmdb.org/t/p/w500${author.profile_path}` :\n            'https://upload.wikimedia.org/wikipedia/commons/9/9c/Volodymyr_Zelensky_Official_portrait.jpg'\n        return (\n        <li className={s.item} key={author.id}>\n                <h2 className={s.name}>{author.name}</h2>\n                <img className={s.img} src={photo} alt={author.name} width='100'/>\n        </li>\n    )})\n    \n    return (\n        <>  \n            {error && <p>{error}</p>}\n            {isLoading&& <p>isLoading...</p>}\n            <ul className={s.list}>\n                {element}\n\n            </ul>\n            \n        </>\n    )\n}\n\nexport default Author","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '48e59f58a9185405f58e5b1089c8261f',\n  },\n});\n\nexport const popularMovies = async () => {\n  const { data } = await instance.get('/trending/movie/week');\n  return data;\n};\n\nexport const getMovieInfo = async id => {\n  const { data } = await instance.get(`/movie/${id}`, {\n    params: {\n      language: 'en - US',\n    },\n  });\n  return data;\n};\n\nexport const searchFilmByName = async (query, page = 1) => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      page,\n      language: 'en - US',\n      include_adult: false,\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["useState","items","isLoading","error","cast","setCast","filmID","useParams","useEffect","prevMovies","getMovieCredits","message","element","map","author","photo","profile_path","className","s","name","src","alt","width","id","instance","axios","baseURL","params","api_key","popularMovies","get","data","getMovieInfo","language","searchFilmByName","query","page","include_adult","getMovieReviews"],"sourceRoot":""}