{"version":3,"file":"static/js/Detail.7529a14d.chunk.js","mappings":"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","sources":["components/service/Api.js","webpack://react-homework-template/./src/components/DetailFilm/detailFilm.module.css?99d1","components/DetailFilm/DetailFilm.jsx","pages/MoveDetailFilm.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '48e59f58a9185405f58e5b1089c8261f',\n  },\n});\n\nexport const popularMovies = async () => {\n  const { data } = await instance.get('/trending/movie/week');\n  return data;\n};\n\nexport const getMovieInfo = async id => {\n  const { data } = await instance.get(`/movie/${id}`, {\n    params: {\n      language: 'en - US',\n    },\n  });\n  return data;\n};\n\nexport const searchFilmByName = async (query, page = 1) => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      page,\n      language: 'en - US',\n      include_adult: false,\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"detailFilm_container__RrbCR\",\"img\":\"detailFilm_img__mk7zl\",\"overview\":\"detailFilm_overview__BPdR3\",\"date\":\"detailFilm_date__P+h8w\",\"title\":\"detailFilm_title__BWSTC\",\"back\":\"detailFilm_back__K4yiw\",\"link\":\"detailFilm_link__YHZdr\",\"listLink\":\"detailFilm_listLink__pFmqK\"};","import { getMovieInfo } from \"./../service/Api\"\nimport { useEffect, useState } from \"react\"\nimport { NavLink, Outlet, useLocation, useNavigate, useParams } from \"react-router-dom\"\nimport s from './detailFilm.module.css'\n\nexport default function Detail() {\n    const [ film , setFilm] = useState({\n        items: [],\n        isLoading: false,\n        error: null,\n    })\n    const { filmID } = useParams()\n    const { pathname } = useLocation();\n    let navigate = useNavigate();\n\n    const handleClick = () => {\n        navigate(-1)\n    }\n\n    useEffect(() => {\n    const fetchDetailFilm = async () => {\n        const results  = await getMovieInfo(filmID);\n        setFilm(prevFilm => ({\n            ...prevFilm,\n            isLoading: true,\n        }))\n        try {\n            setFilm(prevFilm => ({\n                ...prevFilm,\n                items: results,\n                isLoading: false,\n            }))\n        } catch (error) {\n            setFilm(prevFilm => ({\n                ...prevFilm,\n                error: error.message,\n                isLoading: false,\n            }))\n        }\n        };\n    fetchDetailFilm();\n    }, [filmID]);\n    \n\n   \n\n    const {items, isLoading, error}=film\n    console.log(items)\n    const {original_title , poster_path, release_date,overview} = items\n    const image = poster_path\n    ? `https://image.tmdb.org/t/p/w300${poster_path}`\n    : 'https://upload.wikimedia.org/wikipedia/commons/9/9c/Volodymyr_Zelensky_Official_portrait.jpg';\n    return (\n        <>\n        <div className={s.container}>\n        \n        <button className={s.back} onClick={handleClick}>Go back</button>\n            <hr />\n            <h2 className={s.title}>{original_title}</h2>\n            <img className={s.img} src={image} alt={original_title}/>\n            <ul className={s.list}>\n                <li><p className={s.overview}>{overview}</p></li>\n                <li><p className={s.date}>{release_date}</p></li>\n            </ul>\n            </div>\n            \n            <hr />\n            <ul className={s.listLink}>\n                <li>\n                    <NavLink\n                    className={s.link}\n            \n            to={`${pathname}/cast`}\n            >Cast</NavLink>\n                </li>\n                <li>\n            <NavLink \n            className={s.link}\n                \n                to={`${pathname}/reviews`}>\n                Reviews\n            </NavLink>\n                </li>\n            </ul>\n            <Outlet/>\n            {error && <p>{error}</p>}\n            {isLoading&& <p>isLoading...</p>}\n            </>\n    )\n}","import DetailFilm from \"components/DetailFilm\"\n\nconst MovieDetailFilm = () => {\n    return (\n        <DetailFilm/>\n    )\n}\nexport default MovieDetailFilm"],"names":["instance","axios","baseURL","params","api_key","popularMovies","get","data","getMovieInfo","id","language","searchFilmByName","query","page","include_adult","getMovieCredits","getMovieReviews","Detail","useState","items","isLoading","error","film","setFilm","filmID","useParams","pathname","useLocation","navigate","useNavigate","useEffect","fetchDetailFilm","results","prevFilm","message","console","log","original_title","poster_path","release_date","overview","image","className","s","onClick","src","alt","to"],"sourceRoot":""}